name: Build

on:
  push:
    branches:
      - main

permissions:
  checks: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Node.js dependencies
        run: npm ci
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none
          tools: composer
          
      - name: Install PHP dependencies
        run: |
          composer install --prefer-dist --no-progress --no-ansi --no-interaction
          echo "${PWD}/vendor/bin" >> $GITHUB_PATH
          
      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          auto_fix: true
          php_codesniffer: true
          stylelint: true
          eslint: true
          
      - name: Pull
        run: git pull origin main

      - name: Run gulp prod
        run: gulp gitProd

      - name: Commit & push
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git commit -a -m "Build release"
          git push

      - name: Get version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Archive release
        uses: thedoctor0/zip-release@main
        with:
          type: "zip"
          filename: "topten-${{ steps.package-version.outputs.current-version }}.zip"
          exclusions: "*.git* /*node_modules/* .editorconfig /*vendor/*"

      - name: Upload release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "topten-${{ steps.package-version.outputs.current-version }}.zip"
          commit: "main"
          tag: "v${{ steps.package-version.outputs.current-version }}"
          token: ${{ secrets.GITHUB_TOKEN }}
