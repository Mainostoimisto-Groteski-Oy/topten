name: Build dev

on:
  workflow_run:
    workflows: ["Run linters"]
    branches: [dev]
    types:
      - completed

permissions:
  checks: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: dev
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Node.js dependencies
        run: npm ci

      - name: Pull
        run: git pull

      - name: Run gulp prod
        run: gulp gitProdDev

      - name: Get version
        id: pre-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Bump version to dev
        # Run only if the current version does not contain "-dev"
        if: '! contains(steps.pre-version.outputs.current-version, ''-dev'')'
        run: gulp bumpVersionPatch

      - name: Get version
        # Run only if the current version does not contain "-dev"
        if: '! contains(steps.pre-version.outputs.current-version, ''-dev'')'
        id: version-dev
        uses: martinbeentjes/npm-get-version-action@main

      - name: Bump version to dev
        # Run only if the current version does not contain "-dev"
        if: '! contains(steps.pre-version.outputs.current-version, ''-dev'')'
        run: |
          gulp bumpVersionPatch
          sed -i 's/Version: .*/Version: ${{ steps.version-dev.outputs.current-version }}-dev.1/g' style.css
          # Replace version in theme-version.php (format is 'TOPTEN_VERSION', '1.0.0', new format is 'TOPTEN_VERSION', '1.0.0-dev.1')
          sed -i "s/TOPTEN_VERSION', '[0-9]\.[0-9]\.[0-9]'/TOPTEN_VERSION', '${{ steps.version-dev.outputs.current-version }}-dev.1'/g" theme-version.php
          npm version --no-git-tag-version "${{ steps.version-dev.outputs.current-version }}-dev.1"

      - name: Get version
        # Run only if the current version contains "-dev"
        if: contains(steps.pre-version.outputs.current-version, '-dev')
        id: version-not-dev
        uses: martinbeentjes/npm-get-version-action@main

      - name: Bump dev version
        # Run only if the current version contains "-dev"
        if: contains(steps.version-not-dev.outputs.current-version, '-dev')
        run: |
          gulp bumpVersionPre

      - name: Commit & push
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git commit -a -m "build: dev release"
          git push

      - name: Get version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Archive release
        uses: thedoctor0/zip-release@main
        with:
          type: "zip"
          filename: "topten.zip"
          exclusions: "*.git* /*node_modules/* .editorconfig /*vendor/*"

      - name: Upload release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "topten.zip"
          commit: "dev"
          tag: "${{ steps.package-version.outputs.current-version }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          makeLatest: true
          prerelease: false
